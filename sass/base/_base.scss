// Low level basics
// resets, css for html and body only selectors

/* universal selector */
*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  box-sizing: inherit;
}

/* Setting the root font size
   1rem = 10px
   All other px values can be divided by 10 => rem
*/
html {
  /* Bad practive to set px font size - it overrides the user agent
     font-size: 10px;

     user-agent font-size 100% => 10px / 16px => 0.625%
     This defines what 1 rem is.
  */
  font-size: 62.5%;  // root font size setting

  /* @content DIRECTIVE EXAMPLE
  @include respond-phone {
    font-size: 50%;  // pass font size in block to the mixin
  }
  */

  // ORDER OF THE MEDIA QUERIES MATTER TO THE CASCADE
  // last query is applied when conflicts occur
  // EG: if viewport size is 700px
  //     both tab-land and tab-port apply and the last rule is used

  // ORDER: Base + typography > general layout + grid headers + footers > page layout > components

  /* DRY UP MEDIA QUERIES - tab-port handles phone as well
    @include respond(phone) {
      font-size: 30%;  // 1 rem = 4.8px => 4.8px / 16px => 30%
    }
 */


 // @if DIRECTIVE EXAMPLE - pass font size in block to the mixin
  @include respond(tab-land) { // width < 1200?
    font-size: 56.25%;  // 1 rem = 9px => 9px / 16px => 56.25%
  }

  @include respond(tab-port) { // width < 900?
    font-size: 50%;  // 1 rem = 8px => 8px / 16px => 50%
  }

  @include respond(big-desktop) { // width > 1800
    font-size: 75%;  // 1 rem = 12px => 12px / 16px => 75%
  }
}

body {
  box-sizing: border-box;
  padding: 3rem;

  @include respond(tab-port) {
    padding: 0;
  }
}

// selection pseudo-element
::selection {
  background-color: $color-primary;
  color: $color-white;
}
